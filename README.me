# Minhas Finanças

Projeto para portfólio de controle financeiro de despesas e rendas, permitindo o gerenciamento de todas as transações. O projeto oferece a criação de categorias para as transações e inclui uma IA em testes que auxilia na organização financeira.

## Tecnologias Utilizadas

- **Next.js**
- **React.js**
- **TypeScript**
- **Tailwind CSS**
- **ShadCN UI**
- **Clerk** (Autenticação)
- **Prisma** (ORM)
- **Groq** (LLM)
- **Lucide**
- **Recharts**
- **Zod**
- **Tanstack** (react-query)

## Pré-requisitos

Para rodar o projeto, você precisará ter instaladas as seguintes ferramentas:

- **Node.js** (Versão 16 ou superior)
- **npm** (Versão 6 ou superior)
- **Git**

## Instalação

1. Clone o repositório:

   ```bash
   git clone https://github.com/WilliamWunsch-s/my-finances-project.git

2. Instale as dependências:
    npm install

3. Rode o projeto em ambiente de desenvolvimento:
    npm run dev

## Configuração

1. Crie uma conta no Clerk e configure as suas API Keys.

2. Crie o arquivo .env.local na raiz do projeto e adicione as variáveis do Clerk.
    Exemplo de .env.local:
        NEXT_PUBLIC_CLERK_FRONTEND_API=<sua_clerk_frontend_api_key>
        CLERK_API_KEY=<sua_clerk_api_key>
Documentação do clerk para mais informações: https://clerk.com/docs/quickstarts/nextjs

## Estrutura

app/: Contém as principais funcionalidades da aplicação, como autenticação com Clerk, dashboard com páginas para chat, transações, organização e gerenciamento financeiro.

   auth/: Autenticação padrão do Clerk.
   
   dashboard/: Contém páginas de gerenciamento, como chatIA, transaction, organize e manage.
   
   wizard/: Primeira configuração da conta.
   
   api/: Rotas da API.

components/: Componentes globais reutilizáveis em todo o projeto.

hooks/: Contém hooks customizados, como o use-media-query.ts, que verifica a correspondência de queries de mídia.

lib/: Constantes globais, tipos, helpers e inicialização do Prisma.

prisma/: Contém o schema.prisma e as migrações do banco de dados.

public/: Arquivos estáticos do projeto.

schema/: Validações de esquema com Zod.
